# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace:
  enabled: true
  name: demo

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 2

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: budget-tracker-api
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "local"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  port: 8080
  type: LoadBalancer

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /health
    port: 8080
readinessProbe:
  httpGet:
    path: /health
    port: 8080

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
- name: mongodb
  secret:
    secretName: mongodb-credentials
    optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

mongodb:
  enabled: false

  image:
    repository: bitnami/mongodb
    tag: "latest"
  namespace: mongodb
  architecture: standalone
  auth:
    enabled: true
    rootUser: root
    rootPassword: root
    username: admin
    password: example
    database: budget-tracker-api-v2

  sidecars:
    - name: seed-data
      image: bitnami/mongodb:latest
      command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for MongoDB to start..."
          until mongosh --host localhost --port 27017 --eval "db.adminCommand('ping')" &>/dev/null; do
            sleep 2
          done
          echo "Injecting initial user data..."
          echo '
          [
              {
                  "_id": {
                      "$oid": "5143afc66d44e1ceb372121e"
                  },
                  "login": "admin",
                  "firstname": "Temporary",
                  "lastname": "Seeded User",
                  "email": "admin@domain.com",
                  "salted_password": "$2a$10$HOrmuqyfwr575K4P9tjQXe0QKqbddMA/KFZ.YZhWVKPLMUF3LS4gi",
                  "created_at": {"$date": "1994-05-03T17:58:16.530+00:00"}
              }
            ]' > /tmp/init.json

          mongoimport \
              --db budget-tracker-v2 \
              --host "local-dev-mongodb:27017" \
              --username root \
              --password root \
              --collection users \
              --type json \
              --file /tmp/init.json \
              --authenticationDatabase=admin \
              --jsonArray \
              --mode upsert

            echo "Done seeding, sleeping forever..."
            tail -f /dev/null
      lifecycle:
        postStart:
          exec:
            command: ["/bin/true"]

  persistence:
    enabled: false
    namespaceOverride: "mongodb"
